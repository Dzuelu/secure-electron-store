"use strict";var _msgpack=require("@msgpack/msgpack");Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=exports.writeConfigResponse=exports.readConfigResponse=exports.writeConfigRequest=exports.readConfigRequest=void 0;function _typeof(a){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}var path=require("path"),defaultOptions={debug:!0,msgpack:!0,path:"",filename:"data",extension:".json"},readConfigRequest="ReadConfig-Request";exports.readConfigRequest=readConfigRequest;var writeConfigRequest="WriteConfig-Request";exports.writeConfigRequest="WriteConfig-Request";var readConfigResponse="ReadConfig-Response";exports.readConfigResponse="ReadConfig-Response";var writeConfigResponse="WriteConfig-Response";exports.writeConfigResponse="WriteConfig-Response";var Store=function(){function a(b){_classCallCheck(this,a),this.filedata=void 0,this.options=defaultOptions;if(this.mainLog="".concat("[secure-electron-store:","main]=>"),this.rendererLog="".concat("[secure-electron-store:","renderer]=>"),"undefined"!=typeof b&&(this.options=Object.assign(this.options,b)),"undefined"==typeof b||b.path!==defaultOptions.path)try{var c=process.argv.filter(function(a){return 0<=a.indexOf("storePath:")})[0];this.options.path=c.substr(c.indexOf(":")+1),this.options.debug&&console.log("".concat(this.rendererLog," initializing. Parsed 'storePath' value: '").concat(this.options.path,"'."))}catch(a){throw"Could not find property 'additionalArguments' value beginning with 'storePath:' in your BrowserWindow. Please ensure this is set! Error: ".concat(a)}this.options.path=path.join(this.options.path,"".concat(this.options.filename).concat(this.options.extension)),this.validSendChannels=[readConfigRequest,writeConfigRequest],this.validReceiveChannels=[readConfigResponse,writeConfigResponse],this.options.debug&&("object"===("undefined"==typeof process?"undefined":_typeof(process))?console.log("".concat(this.rendererLog," initialized store. Data file: '").concat(this.options.path,"'.")):console.log("".concat(this.mainLog," initialized store. Data file: '").concat(this.options.path,"'.")))}return _createClass(a,[{key:"preloadBindings",value:function preloadBindings(a,b){var c,d=this,e=this.options,f=e.msgpack,g=e.debug,h=e.path,i={};try{c=b.readFileSync(h),"undefined"!=typeof c&&(f?i=(0,_msgpack.decode)(c):i=JSON.parse(c))}catch(a){console.error("".concat(this.rendererLog," encountered error '").concat(a,"' when trying to read file '").concat(h,"'. This file is probably corrupted or does not exist; defaulting file value to '{}'.")),i={}}return{initial:i,path:h,send:function send(b,c,e){d.validSendChannels.includes(b)&&(b===readConfigRequest?(g?console.log("".concat(d.rendererLog," requesting to read key '").concat(c,"' from file.")):null,a.send(b,{key:c})):b===writeConfigRequest&&(g?console.log("".concat(d.rendererLog," requesting to write key:value to file => \"'").concat(c,"':'").concat(e,"'\".")):null,a.send(b,{key:c,value:e})))},onReceive:function onReceive(b,c){d.validReceiveChannels.includes(b)&&a.on(b,function(a,e){if(g)switch(b){case readConfigResponse:console.log("".concat(d.rendererLog," received value for key '").concat(e.key,"' => '").concat(e.value,"'."));break;case writeConfigResponse:console.log("".concat(d.rendererLog," ").concat(e.success?"":"un-","successfully wrote key '").concat(e.key,"' to file."));break;default:}c(e)})}}}},{key:"mainBindings",value:function mainBindings(a,b,c){var d=this,e=this.options,f=e.msgpack,g=e.debug,h=e.path;a.on(readConfigRequest,function(a,e){g?console.log("".concat(d.mainLog," received a request to read from the key '").concat(e.key,"' from the given file '").concat(h,"'.")):null,c.readFile(h,function(a,c){if(a)return console.error("".concat(d.mainLog," encountered error '").concat(a,"' when trying to read key '").concat(e.key,"' from file '").concat(h,"'. This file is probably corrupted or the key does not exist.")),void b.webContents.send(readConfigResponse,{success:!1,key:key,value:void 0});var i=c;i=f?(0,_msgpack.decode)(i):JSON.parse(i),d.filedata=i,g?console.log("".concat(d.mainLog," read the key '").concat(e.key,"' from file => '").concat(i[e.key],"'.")):null,b.webContents.send(readConfigResponse,{success:!0,key:key,value:i[e.key]})})}),a.on(writeConfigRequest,function(a,e){var i=function(){var a=this;this.filedata[e.key]=e.value;var d=this.filedata;d=f?(0,_msgpack.encode)(d):JSON.stringify(d),c.writeFile(h,d,function(c){g?console.log("".concat(a.mainLog," wrote \"'").concat(e.key,"':'").concat(e.value,"'\" to file '").concat(h,"'.")):null,b.webContents.send(writeConfigResponse,{success:!c,key:e.key})})}.bind(d);"undefined"==typeof d.filedata?c.readFile(h,function(a,b){if(a)return console.error("".concat(d.mainLog," encountered error '").concat(a,"' when trying to read file '").concat(h,"'. This file is probably corrupted or does not exist; defaulting file value to '{}'.")),d.filedata={},void i();var c={};try{"undefined"!=typeof b&&(f?c=(0,_msgpack.decode)(b):c=JSON.parse(b))}catch(a){return console.error("".concat(d.mainLog," encountered error '").concat(a,"' when trying to read file '").concat(h,"'. This file is probably corrupted or does not exist; defaulting file value to '{}'.")),d.filedata={},void i()}d.filedata=c,i()}):i()})}}]),a}();exports["default"]=Store;